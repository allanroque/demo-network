---
- name: Coleta Cisco (read-only) - debug completo
  hosts: cisco
  gather_facts: no

  # Força uso de senha e evita chave/agent no network_cli
  vars:

    # Comandos de show (pode ajustar livremente)
    ios_show_cmds:
      version: "show version"
      inventory: "show inventory"
      udi: "show license udi"
      ip_int_brief: "show ip interface brief"
      int_status: "show interfaces status"
      cdp_detail: "show cdp neighbors detail"
      lldp_detail: "show lldp neighbors detail"
      vlan_brief: "show vlan brief"
      etherchannel: "show etherchannel summary"
      route_summary: "show ip route summary"
      bgp_summary: "show ip bgp summary"
      ospf_neighbor: "show ip ospf neighbor"
      env_all: "show environment all"
      power_inline: "show power inline"
      logging_last: "show logging | last 50"

  tasks:
    - name: Sanity - show clock (não falha)
      cisco.ios.ios_command:
        commands: "show clock"
      register: sanity
      changed_when: false
      failed_when: false

    - name: Coletar ios_facts (com enable; não falha)
      cisco.ios.ios_facts:
      register: facts
      become: true
      become_method: enable
      failed_when: false

    - name: Executar comandos de show (um por vez; não falha)
      cisco.ios.ios_command:
        commands: "{{ item.value }}"
      loop: "{{ ios_show_cmds | dict2items }}"
      loop_control:
        label: "{{ item.key }}"
      register: shows
      become: true
      become_method: enable
      changed_when: false
      failed_when: false

    - name: Inicializar dicionário consolidado dos shows
      set_fact:
        shows_map: {}

    - name: Consolidar saída dos shows em {nome: stdout}
      set_fact:
        shows_map: "{{ shows_map | combine({ item.item.key: (item.stdout | default([])) }) }}"
      loop: "{{ shows.results | default([]) }}"

    # ======= DEBUG TOTAL =======
    - name: DEBUG - sanity (show clock)
      debug:
        var: sanity.stdout

    - name: DEBUG - ios_facts completo
      debug:
        var: facts

    - name: DEBUG - todos os 'show' (mapa {nome: stdout})
      debug:
        var: shows_map
